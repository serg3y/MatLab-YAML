# Input file for maneuver estimation

# This file must contain one orbit defined as keplerian, equinoctial, circular
# or cartesian.

# Lines starting with '#' are silently ignored

# All dates are treated in UTC timescale.
# The inertial frame for orbit definition and propagation is EME2000.
# Physical data are read from the src/tutorial/resources/tutorial-orekit-data
# directory.

# Estimated parameters (clock offsets, atmospheric parameters, etc.)
# are set into an array given by [initialValue, minValue, maxValue]

# Flag for OPM generation
isOpmGenerated: false

# Orbit definition (position in meters, velocity in meter per seconds, angles in degrees, date in ISO 8601)
orbit:
  date: "2022-09-13T12:00:00.000"
  frameName: "EME2000"
  orbitType:
    name: "CARTESIAN"
    cartesian:
      x: 463262.733938
      y: 6992295.407876
      z: 1555261.269564
      vx: -4346.558024
      vy: -1038.376800
      vz: 5963.136782
                           
# Spacecraft definition (mass in kilogrammes)
spacecraft:
  name: "TEST_MAN"
  id: "2022-001A"
  mass: 1000.0
  attitudeMode: "LOF_ALIGNED_TNW"
  
# Propagator definition
propagator:
  # Numerical integrator (min step (s), max step (s) and position error (m))
  integrator:
    minStep: 0.001
    maxStep: 300
    fixedStep: 100
    positionError: 0.01
  # Force models used by the propagator (only the ones used)
  forceModels:
    # Central body gravity
    gravity:
      degree: 20
      order: 20
    # 3rd body attraction
    thirdBody:
      - name: "Sun"
        withSolidTides: false
      - name: "Moon"
        withSolidTides: false
    # Drag
    drag:
      cd:
        values: [2.2, -10.0, 10.0]
        isEstimated: true
      area: 1.5
    # Solar radiation pressure
    solarRadiationPressure:
      # Estimated solar radiation coefficient
      cr:
        values: [2.0, -10.0, 10.0]
        isEstimated: true
      area: 1.5
    # Maneuvers
    maneuvers:
      - name: "MAN_0"
        startDate:
          values: ["2022-09-13T17:23:59.211", "2000-01-01T00:00:00.000", "2100-01-01T00:00:00.000"]
          isEstimated: true
        stopDate:
          values: ["2022-09-13T18:36:00.789", "2000-01-01T00:00:00.000", "2100-01-01T00:00:00.000"]
          isEstimated: true
        thrust:
          values: [0.6, 0.0, 1.0]
          isEstimated: true
        isp: 2900
        direction: [1.0, 0.0, 0.0]
      - name: "MAN_1"
        medianDate:
          values: ["2022-09-13T18:50:29.369", "2000-01-01T00:00:00.000", "2100-01-01T00:00:00.000"]
          isEstimated: true
        duration:
          values: [4320.074, 4000, 5000]
          isEstimated: true
        thrust:
          values: [0.6, 0.0, 1.0]
          isEstimated: true
        isp: 2900
        direction: [1.0, 0.0, 0.0]
      - name: "MAN_2"
        medianDate:
          values: ["2022-09-13T22:00:33.351", "2000-01-01T00:00:00.000", "2100-01-01T00:00:00.000"]
          isEstimated: true
        duration:
          values: [1800.0, 0.0, 4000.0]
          isEstimated: true
        thrust:
          values: [0.6, 0.0, 1.0]
          isEstimated: true
        isp: 2900
        direction: [0.0, 0.0, 1.0]

# Body definition (default is a WGS-84 ellipsoid with IERS-2010 conventions and simple EOP frame)
body:
  iersConventionYear: 2010
  frameName: "CIO/2010-based ITRF simple EOP"
  equatorialRadius: 6378137.0
  inverseFlattening: 298.257223563

# Measurements definition
measurements:
  measurementFiles: ["maneuver-estimation-measurements.aer"]
  pv:
    sigmaPos: 10.0
    sigmaVel: 0.01
    weight: 1.0
  outlierRejectionMultiplier: 6
  outlierRejectionStartingIteration: 2
  
# Estimator definition
estimator:
  # normalized parameters p are computed from physical parameters x as p = (x - x0) / sx
  # where x0 is the reference value for physical parameter x and sx is the associated
  # scaling factor for orbital parameters normalization (m)
  orbitalParametersPositionScale: 10.0
  # Levenberg-Marquardt or a Gauss-Newton
  optimizationEngine:
    # levenbergMarquardt or gaussNewton
    gaussNewton:
     #initialStep: 1.0e6
  maxIterations: 20
  maxEvaluations: 25
  # convergence is reached when max|p(k+1) - p(k)| < ε for each normalized estimated
  # parameters p and iterations k and k+1 so the ε threshold
  # Normalized values are computed as (x - x0) / sx, so convergence is reached when
  # the following condition holds for all estimated parameters: |x[i+1] - x[i]| <= ε * sx
  # So the convergence threshold specified here can be considered as a multiplication
  # factor applied to scale. Since for all parameters the scale is often small,
  # then the threshold should not be too small. A value  of 10⁻³ is often quite accurate.
  convergenceThreshold: 1.0e-3

# base name of the output files (log and residuals), no files created if empty
outputBaseName: "maneuver-estimation"